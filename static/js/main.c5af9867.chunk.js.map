{"version":3,"sources":["store/ducks/todo.js","store/ducks/user.js","store/ducks/toast.js","store/ducks/index.js","store/index.js","components/fullScreenGlitch/index.js","components/index/styled.js","components/index/index.js","pages/index.js","firebase.js","secret/firebaseConfig.js","components/allComplete/index.js","components/loadingData/index.js","components/loadingUser/index.js","components/updateTodo/styled.js","components/updateTodo/index.js","components/todoItem/styled.js","components/todoItem/index.js","components/navFormAdd/styled.js","components/navFormAdd/index.js","components/headerMenu/styled.js","components/headerMenu/index.js","components/viewport/index.js","components/todo/assets.js","components/todo/styled.js","components/todo/index.js","pages/dashboard.js","utils/auth.js","components/login/styled.js","components/login/index.js","pages/login.js","components/register/styled.js","components/register/index.js","pages/register.js","utils/upload.js","components/profile/styled.js","components/profile/index.js","utils/update.js","pages/profile.js","components/notFound/index.js","pages/notFound.js","components/mobileToast/styled.js","components/mobileToast/index.js","reset/index.js","privateRoute.js","publicRoute.js","routes.js","App.js","serviceWorker.js","index.js","assets/loading.svg","assets/loadingUser.svg","assets/logo.svg","assets/google.svg","assets/github.svg","assets/microsoft.svg","assets/check.svg"],"names":["createActions","updateTodo","requestTodoList","successTodoList","failureTodoList","logout","Types","INITIAL_STATE","Creatores","data","loading","error","createReducer","UPDATE_TODO","state","action","map","item","id","payload","newTodo","REQUEST_TODO_LIST","SUCCESS_TODO_LIST","FAILURE_TODO_LIST","LOGOUT","requestUser","successUser","failedUser","logoutUser","Creators","isAuth","REQUEST_USER","SUCCESS_USER","FAILED_USER","LOGOUT_USER","requestMessage","endMessage","message","isVisible","REQUEST_MESSAGE","END_MESSAGE","combineReducers","todo","user","toast","store","createStore","reducers","GlitchAnimation","glitchText","text","linkTo","children","to","className","data-text","EmblaReact","styled","EmblaCarouselReact","EmblaReactContainer","div","EmblaReactSlide","FooterContainer","FooterLink","a","href","target","rel","props","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","img","style","width","display","alignItems","flexDirection","padding","margin","color","letterSpacing","filter","opacity","maxWidth","src","alt","minWidth","justifyContent","height","backgroundColor","UpdateContainer","visible","UpdateFlexButton","UpdateButton","button","background","UpdateClose","UpdateTodo","edit","setEdit","todoData","useSelector","handleUpdateTodo","length","todoExists","collection","doc","update","type","value","onChange","e","placeholder","onClick","TodoWrapper","TodoContainer","borderColor","TodoMainContent","TodoToolsWrapper","TodoToolsContainer","TodoButtonsWrapper","TodoButton","TodoIconBox","TodoContent","p","textDecoration","TodoItem","buttonPressTimer","dispatch","useDispatch","useState","onConfirm","console","log","delete","onCancel","setConfirm","confirm","handleButtonPress","setTimeout","onLongPress","textArea","document","createElement","position","body","appendChild","select","execCommand","removeChild","copyToClipboard","TypesToast","handleButtonRelease","clearTimeout","onTouchStart","onTouchEnd","onMouseDown","onMouseUp","onMouseLeave","marked","key","completed","title","NavFormUnform","Form","InputUnform","Input","ButtonUnformContainer","ButtonUnform","NavFormAdd","userData","onSubmit","resetForm","add","userEmail","email","date","Date","name","ProfileWrapper","ProfileContainer","ProfileLink","Link","ProfileImgContainer","ProfileImg","DisplayName","h1","ButtonBackWrapper","BackIconBox","BackLabel","HeaderMenu","renderBackButton","photoURL","Viewport","Wrapper","ViewportComponent","AllCompleteImg","Loading","LoadingUserImg","NavWrapper","NavContainer","Todo","userIsLoading","todoIsLoading","dispatchSnapshot","snapshot","size","TypesTodo","todoList","docs","useEffect","currentUser","auth","uid","displayName","where","orderBy","onSnapshot","getUserData","A","signByProvider","provider","err","signInWithPopup","then","updateProfile","catch","handleSignByGoogle","GoogleAuthProvider","handleSignByGithub","GithubAuthProvider","handleSignByMicrosoft","OAuthProvider","logOut","signOut","AuthWrapper","LabelAction","AppLogo","ProvidersContainer","ButtonProvider","FormUnform","EmailInputContainer","Label","label","SubmitContainer","ButtonForm","LinkForm","Login","history","isLoading","showErrors","all","password","signInWithEmailAndPassword","handleLoginByEmail","Logo","Google","Github","Microsoft","htmlFor","disabled","Register","createUserWithEmailAndPassword","handleRegisterByEmail","uploadPhoto","file","result","currentFile","includes","info","ref","storage","dt","getTime","replace","c","r","Math","random","floor","toString","createUniqueId","metadata","contentType","child","put","getDownloadURL","url","FileForm","FileContainer","File","FileIconBox","FileLoadingContainer","FileLoadingImg","FileInputUnform","input","IndexLink","Profile","inputFile","useRef","updatingProfile","setUpdatingProfile","current","click","LoadingPhoto","accept","files","initialData","success","readOnly","ToastWrapper","MobileToast","createGlobalStyle","PrivateRoute","Component","component","rest","render","pathname","from","location","PublicRoute","Routes","onAuthStateChanged","localStorage","getItem","setItem","removeItem","basename","path","exact","Index","Dashboard","NotFound","App","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","getElementById","URL","origin","addEventListener","fetch","response","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.c5af9867.chunk.js","sourcesContent":["import { createActions, createReducer } from \"reduxsauce\";\r\n\r\n// Criando action types e creatores\r\nexport const { Types, Creatores } = createActions({\r\n  updateTodo: [\"newData\"],\r\n  requestTodoList: [],\r\n  successTodoList: [\"data\"],\r\n  failureTodoList: [],\r\n  logout: []\r\n});\r\n\r\n// Criando os reducer handlers\r\nconst INITIAL_STATE = {\r\n  data: null,\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nconst update = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    data: state.data.map(item =>\r\n      item.id === action.payload.newTodo.id ? action.payload.newTodo : item\r\n    )\r\n  };\r\n};\r\n\r\nconst request = (state = INITIAL_STATE, action) => {\r\n  return { ...state, loading: true };\r\n};\r\n\r\nconst success = (state = INITIAL_STATE, action) => {\r\n  return { data: action.payload.data, loading: false, error: null };\r\n};\r\n\r\nconst failure = (state = INITIAL_STATE, action) => {\r\n  return { data: null, loading: false, error: \"An error ocurred, try again\" };\r\n};\r\nconst logout = (state = INITIAL_STATE, action) => {\r\n  return { data: null, loading: false, error: null };\r\n};\r\n\r\n// Rest of action reducer.....\r\nexport default createReducer(INITIAL_STATE, {\r\n  [Types.UPDATE_TODO]: update,\r\n  [Types.REQUEST_TODO_LIST]: request,\r\n  [Types.SUCCESS_TODO_LIST]: success,\r\n  [Types.FAILURE_TODO_LIST]: failure,\r\n  [Types.LOGOUT]: logout\r\n});\r\n","import { createActions, createReducer } from \"reduxsauce\";\r\n\r\nexport const { Types, Creators } = createActions({\r\n    requestUser: [],\r\n    successUser: [\"data\"],\r\n    failedUser: [\"error\"],\r\n    logoutUser: []\r\n});\r\n\r\nconst INITIAL_STATE = {\r\n    data: null,\r\n    loading: false,\r\n    error: null,\r\n    isAuth: null\r\n};\r\n\r\nconst request = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        loading: true\r\n    };\r\n};\r\nconst success = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        data: action.payload.data,\r\n        loading: false,\r\n        error: null,\r\n        isAuth: true\r\n    };\r\n};\r\nconst error = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        data: null,\r\n        loading: false,\r\n        error: action.payload.error,\r\n        isAuth: false\r\n    };\r\n};\r\nconst logout = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        data: null,\r\n        loading: false,\r\n        error: null,\r\n        isAuth: false\r\n    };\r\n};\r\nexport default createReducer(INITIAL_STATE, {\r\n    [Types.REQUEST_USER]: request,\r\n    [Types.SUCCESS_USER]: success,\r\n    [Types.FAILED_USER]: error,\r\n    [Types.LOGOUT_USER]: logout\r\n});\r\n","import { createActions, createReducer } from \"reduxsauce\";\r\n\r\nexport const { Types, Creators } = createActions({\r\n    requestMessage: [\"message\"],\r\n    endMessage: []\r\n});\r\n\r\nconst INITIAL_STATE = {\r\n    message: null,\r\n    isVisible: false\r\n};\r\n\r\nconst request = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        isVisible: true,\r\n        message: action.payload.message\r\n    };\r\n};\r\nconst endMessage = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        isVisible: false,\r\n    };\r\n};\r\nexport default createReducer(INITIAL_STATE, {\r\n    [Types.REQUEST_MESSAGE]: request,\r\n    [Types.END_MESSAGE]: endMessage,\r\n});\r\n","import { combineReducers } from 'redux';\r\n\r\nimport todo from './todo';\r\nimport user from './user';\r\nimport toast from './toast';\r\n\r\nexport default combineReducers({\r\n    todo,\r\n    user,\r\n    toast\r\n});","import { createStore } from 'redux';\r\n//import { createStore, applyMiddleware } from 'redux';\r\n//import  createSagaMiddleware from \"redux-saga\";\r\n\r\nimport reducers from './ducks';\r\n\r\n//import rootSaga from \"./saga_ducks/sagas\"\r\n\r\n//const sagaMiddleware = createSagaMiddleware();\r\n\r\n//const store = createStore(reducers, applyMiddleware(sagaMiddleware));\r\nconst store = createStore(reducers);\r\n\r\n//sagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./glitchAnimation.scss\";\r\n\r\nexport default function GlitchAnimation({\r\n    glitchText,\r\n    text,\r\n    linkTo,\r\n    children\r\n}) {\r\n    return (\r\n        <div id=\"app\">\r\n            <Link id=\"wrapper\" to={linkTo}>\r\n                <h1 className=\"glitch\" data-text={glitchText}>\r\n                    {glitchText}\r\n                </h1>\r\n                {text && <h1 id=\"message\">{text}</h1>}\r\n            </Link>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nimport EmblaCarouselReact from \"embla-carousel-react\";\r\n\r\nexport const EmblaReact = styled(EmblaCarouselReact)``;\r\nexport const EmblaReactContainer = styled.div`\r\ncursor: grab;\r\n    display: flex;\r\n`;\r\nexport const EmblaReactSlide = styled.div`\r\n    flex: 0 0 100%;\r\n`;\r\n\r\nexport const FooterContainer = styled.div`\r\n    position: fixed;\r\n    bottom: 0;\r\n    margin: auto;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    background: #0A0A0A;\r\n`;\r\nexport const FooterLink = styled.a`\r\n    text-decoration: none;\r\n    color: dimgrey;\r\n    padding: 16px 32px;\r\n    width: 150px;\r\n    min-width: 100px;\r\n    text-align: center;\r\n    \r\n    transition: var(--transition);\r\n    &:hover{\r\n        background: #131215;\r\n    }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport FullScreenGlitch from \"../fullScreenGlitch/index\";\r\n\r\nimport * as S from \"./styled\";\r\n\r\nexport default () => (\r\n    <>\r\n        <S.EmblaReact>\r\n            <S.EmblaReactContainer>\r\n                <S.EmblaReactSlide>\r\n                    <FullScreenGlitch glitchText=\"Simple\" text=\"Click here and use or swipe left for more information\" linkTo=\"dashboard\" />\r\n                </S.EmblaReactSlide>\r\n                <S.EmblaReactSlide>\r\n                    <FullScreenGlitch glitchText=\"I wear...\" text=\"This app is using React Js next to a BaaS, Firestore. Download App for best performance and experience\" linkTo=\"dashboard\" />\r\n                </S.EmblaReactSlide>\r\n                <S.EmblaReactSlide>\r\n                    <FullScreenGlitch glitchText=\"?\" text=\"I created this simple platform for fun and experience, feel free to use it and see your code on Github, thank you :)\" linkTo=\"dashboard\" />\r\n                </S.EmblaReactSlide>\r\n            </S.EmblaReactContainer>\r\n        </S.EmblaReact>\r\n\r\n        <S.FooterContainer>\r\n            <S.FooterLink\r\n                href=\"https://github.com/LaksCastro\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer noopener\"\r\n            >\r\n                Github\r\n            </S.FooterLink>\r\n            <S.FooterLink\r\n                href=\"https://github.com/LaksCastro/todo\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer noopener\"\r\n            >\r\n                Repository\r\n            </S.FooterLink>\r\n        </S.FooterContainer>\r\n    </>\r\n);\r\n","import React from \"react\"\r\n\r\nimport Index from \"../components/index/index\"\r\n\r\nexport default ({ ...props }) => <Index {...props} />","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nimport firebaseConfig from \"./secret/firebaseConfig\";\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const db = firebase.firestore();\r\n\r\nexport default firebase;\r\n","export default {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n};\r\n","import React from \"react\";\r\n\r\nexport default ({ img }) => (\r\n    <div\r\n        style={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n            padding: \"2rem 1rem\"\r\n        }}\r\n    >\r\n        <h1\r\n            style={{\r\n                margin: \"1rem 0\",\r\n                color: \"rgb(60,60,60)\",\r\n                letterSpacing: \"0.4em\"\r\n            }}\r\n        >\r\n            Congratulations!\r\n        </h1>\r\n        <img\r\n            style={{\r\n                filter: \"grayscale(100%)\",\r\n                opacity: \"0.1\",\r\n                width: \"100%\",\r\n                maxWidth: \"250px\"\r\n            }}\r\n            src={img}\r\n            alt=\"All Complete! Congratulations!\"\r\n        />\r\n    </div>\r\n);\r\n","import React from \"react\";\r\n\r\nexport default ({ img }) => (\r\n    <div\r\n        style={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n            padding: \"2rem 1rem\"\r\n        }}\r\n    >\r\n        <img\r\n            style={{\r\n                filter: \"grayscale(100%)\",\r\n                opacity: \"0.1\",\r\n                width: \"220px\",\r\n                minWidth: \"50px\"\r\n            }}\r\n            src={img}\r\n            alt=\"Loading Data\"\r\n        />\r\n    </div>\r\n);\r\n","import React from \"react\";\r\n\r\nexport default ({ img }) => (\r\n    <div\r\n        style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            width: \"100%\",\r\n            height: \"100vh\",\r\n            padding: \"3rem\",\r\n            backgroundColor: \"#0B0A0D\"\r\n        }}\r\n    >\r\n        <img\r\n            style={{\r\n                filter: \"grayscale(100%)\",\r\n                opacity: \"0.1\",\r\n                width: \"100%\",\r\n                maxWidth: \"200px\"\r\n            }}\r\n            src={img}\r\n            alt=\"Loading Svg\"\r\n        />\r\n    </div>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const UpdateContainer = styled.div`\r\n    transition: var(--transition);\r\n    opacity: ${props => (props.visible ? \"1\" : \"0\")};\r\n    visibility: ${props => (props.visible ? \"visible\" : \"hidden\")};\r\n\r\n    position: fixed;\r\n\r\n    top: 2rem;\r\n\r\n    border-radius: 4px;\r\n    padding: 4px;\r\n    background: #0b0a0d;\r\n\r\n    width: 100%;\r\n    max-width: 375px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    border: 3px solid #1c1b1e;\r\n\r\n    z-index: 1000;\r\n\r\n    textarea {\r\n        flex: 1;\r\n        padding: 0.8rem 1.2rem;\r\n        min-width: 0;\r\n\r\n        background: rgba(28, 27, 30, 0.5);\r\n\r\n        margin: 4px;\r\n\r\n        color: white;\r\n        border-radius: 8px;\r\n\r\n        transition: var(--transition);\r\n\r\n        &:hover,\r\n        &:focus {\r\n            background: rgba(48, 47, 50, 0.5);\r\n        }\r\n    }\r\n`;\r\nexport const UpdateFlexButton = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const UpdateButton = styled.button`\r\n    border-radius: 8px;\r\n    flex: 1;\r\n    padding: 0.8rem 1.2rem;\r\n    background: ${props => props.background || \"white\"};\r\n    transition: var(--transition);\r\n    &:hover {\r\n        filter: grayscale(20%);\r\n    }\r\n    margin: 4px;\r\n`;\r\n\r\nexport const UpdateClose = styled.div`\r\n    opacity: ${props => (props.visible ? \"1\" : \"0\")};\r\n    visibility: ${props => (props.visible ? \"visible\" : \"hidden\")};\r\n\r\n    transition: var(--transition);\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    position: fixed;\r\n\r\n    background: rgb(0, 0, 0, 0.5);\r\n    z-index: 995;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { db } from \"../../firebase\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport * as S from \"./styled\";\r\n\r\nconst UpdateTodo = ({ edit, setEdit }) => {\r\n    const todoData = useSelector(state => state.todo.data);\r\n\r\n    function todoExists(todo) {\r\n        return todoData.filter(item => item.id === todo.id).length !== 0\r\n            ? true\r\n            : false;\r\n    }\r\n    function handleUpdateTodo(todo) {\r\n        if (!todoExists(todo)) {\r\n            toast.error(\"This To Do does not exist :(\");\r\n            return;\r\n        }\r\n\r\n        db.collection(\"todo\")\r\n            .doc(todo.id)\r\n            .update({\r\n                text: todo.text\r\n            });\r\n    }\r\n    return (\r\n        <>\r\n            <S.UpdateContainer visible={!!edit}>\r\n                <textarea\r\n                    type=\"text\"\r\n                    value={(edit && edit.text) || \"\"}\r\n                    onChange={e => setEdit({ ...edit, text: e.target.value })}\r\n                    placeholder=\"Type anything...\"\r\n                />\r\n                <S.UpdateFlexButton>\r\n                    <S.UpdateButton\r\n                        onClick={() => setEdit(null)}\r\n                        background=\"#DD5145\"\r\n                        type=\"button\"\r\n                    >\r\n                        Cancel\r\n                    </S.UpdateButton>\r\n                    <S.UpdateButton\r\n                        onClick={() => {\r\n                            handleUpdateTodo(edit);\r\n                            setEdit(null);\r\n                        }}\r\n                        background=\"#79b538\"\r\n                        type=\"button\"\r\n                    >\r\n                        Save\r\n                    </S.UpdateButton>\r\n                </S.UpdateFlexButton>\r\n            </S.UpdateContainer>\r\n            <S.UpdateClose visible={!!edit}></S.UpdateClose>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UpdateTodo;\r\n","import styled from \"styled-components\";\r\n\r\nexport const TodoWrapper = styled.div`\r\n    width: 100%;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    padding: 12px;\r\n`;\r\nexport const TodoContainer = styled.div`\r\n    width: 100%;\r\n    max-width: 560px;\r\n    border-radius: 8px;\r\n\r\n    border: 3px solid ${props => props.borderColor || \"white\"};\r\n    background: #1c1b1f;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    align-items: flex-start;\r\n`;\r\nexport const TodoMainContent = styled.div`\r\n    display: flex;\r\n    flex: 1;\r\n    align-items: center;\r\n`;\r\nexport const TodoToolsWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 100%;\r\n    padding: 6px;\r\n`;\r\nexport const TodoToolsContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\nexport const TodoButtonsWrapper = styled.div`\r\n    display: flex;\r\n`\r\nexport const TodoButton = styled.button`\r\n    border-radius: 4px;\r\n    overflow: hidden;\r\n    margin: 2px;\r\n\r\n    padding: 8px 12px;\r\n    color: ${props => props.color};\r\n\r\n    transition: var(--transition);\r\n    \r\n    background: ${props => props.background || \"rgba(255,255,255,0.05)\"};\r\n\r\n    &:hover {\r\n        filter: brightness(80%);\r\n    }\r\n    transition: all .3s ease-in-out;\r\n\r\n    will-change: opacity, visibility;\r\n    \r\n    &.hide{\r\n        opacity: 0;\r\n        visibility: hidden;\r\n    }\r\n    &.visible{\r\n        opacity: 1;\r\n        visibility: visible;\r\n    }\r\n`;\r\nexport const TodoIconBox = styled.button`\r\n    width: 36px;\r\n    height: 36px;\r\n\r\n    color: ${props => props.color || \"dimgrey\"};\r\n    padding: 8px;\r\n\r\n    transition: var(--transition);\r\n\r\n    &:hover {\r\n        background: rgba(255,255,255,0.05);\r\n    }\r\n    transition: all .3s ease-in-out;\r\n\r\n    will-change: opacity, visibility;\r\n    \r\n    &.hide{\r\n        opacity: 0;\r\n        visibility: hidden;\r\n    }\r\n    &.visible{\r\n        opacity: 1;\r\n        visibility: visible;\r\n    }\r\n`;\r\nexport const TodoContent = styled.p`\r\n    color: white;\r\n    flex: 1;\r\n    min-width: 0;\r\n    padding: 16px;\r\n    line-height: 1.4;\r\n\r\n    text-decoration: ${props => props.textDecoration};\r\n`;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Types as TypesToast } from \"../../store/ducks/toast\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { Checkbox as Uncompleted } from \"styled-icons/boxicons-regular/Checkbox\";\r\nimport { CheckboxChecked as Completed } from \"styled-icons/boxicons-regular/CheckboxChecked\";\r\n\r\nimport { Trash as Remove } from \"styled-icons/boxicons-regular/Trash\";\r\nimport { EditAlt as Edit } from \"styled-icons/boxicons-regular/EditAlt\";\r\n\r\nimport { db } from \"../../firebase\";\r\n\r\nimport * as S from \"./styled\";\r\n\r\nconst TodoItem = ({ item, setEdit }) => {\r\n    const dispatch = useDispatch();\r\n    const { isVisible } = useSelector(state => state.toast);\r\n    let buttonPressTimer\r\n\r\n    const [confirm, setConfirm] = useState({\r\n        visible: false,\r\n        onConfirm: deleteTodo,\r\n        onCancel: () => {\r\n            setConfirm({\r\n                ...confirm,\r\n                visible: false\r\n            });\r\n        }\r\n    });\r\n\r\n    function deleteTodo() {\r\n        console.log(\"chego aq\")\r\n        db.collection(\"todo\")\r\n            .doc(item.id)\r\n            .delete();\r\n    }\r\n\r\n    //TODO ITEM ACTION\r\n    function handleRemoveTodo() {\r\n        setConfirm({\r\n            ...confirm,\r\n            visible: true\r\n        });\r\n    }\r\n    function handleToggleCompleted() {\r\n        db.collection(\"todo\")\r\n            .doc(item.id)\r\n            .update({\r\n                completed: !item.completed\r\n            });\r\n    }\r\n    function copyToClipboard() {\r\n        const textArea = document.createElement(\"textarea\");\r\n        textArea.value = item.text;\r\n        textArea.style.position = \"fixed\";\r\n        document.body.appendChild(textArea);\r\n        textArea.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(textArea);\r\n    }\r\n\r\n    function handleButtonPress() {\r\n        buttonPressTimer = setTimeout(onLongPress, 500);\r\n    }\r\n    function onLongPress() {\r\n        copyToClipboard(item.text);\r\n        if (isVisible) return;\r\n        dispatch({\r\n            type: TypesToast.REQUEST_MESSAGE,\r\n            payload: {\r\n                message: \"Copied\"\r\n            }\r\n        });\r\n    }\r\n    function handleButtonRelease() {\r\n        clearTimeout(buttonPressTimer);\r\n    }\r\n\r\n    function onConfirmDelete() {\r\n        confirm.onConfirm();\r\n    }\r\n    function onCancelDelete() {\r\n        confirm.onCancel();\r\n    }\r\n\r\n    return (\r\n        <S.TodoWrapper\r\n            onTouchStart={handleButtonPress}\r\n            onTouchEnd={handleButtonRelease}\r\n            onMouseDown={handleButtonPress}\r\n            onMouseUp={handleButtonRelease}\r\n            onMouseLeave={handleButtonRelease}\r\n            background={item.marked ? \"dimgrey\" : \"transparent\"}\r\n            key={item.id}\r\n        >\r\n            <S.TodoContainer\r\n                borderColor={\r\n                    item.completed\r\n                        ? \"#79B538\"\r\n                        : \"#dd5145\"\r\n                }\r\n            >\r\n                <S.TodoMainContent>\r\n                    <S.TodoContent\r\n                        textDecoration={\r\n                            item.completed ? \"line-through\" : \"none\"\r\n                        }\r\n                    >\r\n                        {item.text}\r\n                    </S.TodoContent>\r\n                </S.TodoMainContent>\r\n\r\n                <S.TodoToolsWrapper>\r\n                    <S.TodoToolsContainer>\r\n                        <S.TodoIconBox\r\n                            color={\r\n                                item.completed\r\n                                    ? \"#79B538\"\r\n                                    : \"#dd5145\"\r\n                            }\r\n                            onClick={handleToggleCompleted}\r\n                            title=\"Toggle completed\"\r\n                        >\r\n                            {item.completed ? <Completed /> : <Uncompleted />}\r\n                        </S.TodoIconBox>\r\n                        <S.TodoIconBox onClick={() => setEdit(item)}>\r\n                            <Edit />\r\n                        </S.TodoIconBox>\r\n                        <S.TodoIconBox\r\n                            className={confirm.visible ? \"hide\" : \"visible\"}\r\n                            onClick={handleRemoveTodo}\r\n                            title=\"Remove\"\r\n                        >\r\n                            <Remove />\r\n                        </S.TodoIconBox>\r\n                    </S.TodoToolsContainer>\r\n                    <S.TodoButtonsWrapper>\r\n                        <S.TodoButton color=\"#f1f1f1\" onClick={onCancelDelete} className={confirm.visible ? \"visible\" : \"hide\"}>\r\n                            Cancel\r\n                        </S.TodoButton>\r\n                        <S.TodoButton color=\"#fff\" background=\"#DD5145\" onClick={onConfirmDelete} className={confirm.visible ? \"visible\" : \"hide\"}>\r\n                            Confirm\r\n                        </S.TodoButton>\r\n                    </S.TodoButtonsWrapper>\r\n                </S.TodoToolsWrapper>\r\n\r\n            </S.TodoContainer>\r\n        </S.TodoWrapper>\r\n    );\r\n};\r\nexport default TodoItem;\r\n","import styled from \"styled-components\";\r\nimport { Form, Input } from \"@rocketseat/unform\";\r\n\r\nexport const NavFormUnform = styled(Form)`\r\n    width: 100%;\r\n    display: flex;\r\n\r\n    align-items: center;\r\n    border: 3px solid #1c1b1e;\r\n\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n`;\r\nexport const InputUnform = styled(Input)`\r\n    flex: 1;\r\n    padding: 0.8rem 1.2rem;\r\n    min-width: 0;\r\n\r\n    color: white;\r\n\r\n    transition: var(--transition);\r\n\r\n    &:hover,\r\n    &:focus {\r\n        background: rgba(28, 27, 30, 0.5);\r\n    }\r\n`;\r\nexport const ButtonUnformContainer = styled.button`\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 90px;\r\n    background: #79b538;\r\n    min-width: 49px;\r\n\r\n    transition: var(--transition);\r\n    &:hover {\r\n        background: #68a427;\r\n    }\r\n`;\r\nexport const ButtonUnform = styled.div`\r\n    color: white;\r\n\r\n    height: 40px;\r\n    width: 40px;\r\n\r\n    padding: 8px;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { db } from \"../../firebase\";\r\n\r\nimport { Plus as Add } from \"styled-icons/boxicons-regular/Plus\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport * as S from \"./styled\";\r\n\r\nconst NavFormAdd = () => {\r\n    const userData = useSelector(state => state.user.data);\r\n    \r\n    function handleAddTodo({ text }, { resetForm }) {\r\n        if (!text.length) {\r\n            toast.error(\"First set a text :)\");\r\n            return;\r\n        }\r\n        db.collection(\"todo\").add({\r\n            text,\r\n            completed: false,\r\n            userEmail: userData.email,\r\n            date: new Date()\r\n        });\r\n        resetForm();\r\n    }\r\n    return (\r\n        <S.NavFormUnform onSubmit={handleAddTodo}>\r\n            <S.InputUnform\r\n                placeholder=\"To study React...\"\r\n                type=\"text\"\r\n                name=\"text\"\r\n            />\r\n            <S.ButtonUnformContainer>\r\n                <S.ButtonUnform type=\"submit\">\r\n                    <Add />\r\n                </S.ButtonUnform>\r\n            </S.ButtonUnformContainer>\r\n        </S.NavFormUnform>\r\n    );\r\n};\r\n\r\nexport default NavFormAdd;","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const ProfileWrapper = styled.div`\r\n    width: 100%;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    padding: 12px;\r\n`;\r\nexport const ProfileContainer = styled.div`\r\n    width: 100%;\r\n\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    \r\n    max-width: 960px;\r\n    margin: 0 8px;\r\n`;\r\nexport const ProfileLink = styled(Link)`\r\n    flex: 1;\r\n    margin-right: 12px;\r\n    text-decoration: none;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\nexport const ProfileImgContainer = styled.div`\r\n    width: 45px;\r\n    height: 45px;\r\n`;\r\nexport const ProfileImg = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    border-radius: 8px;\r\n\r\n    object-fit: cover;\r\n    object-position: center;\r\n`;\r\nexport const DisplayName = styled.h1`\r\n    color: lightgrey;\r\n    margin: 0 1rem;\r\n`;\r\nexport const ButtonBackWrapper = styled(Link)`\r\n    flex: 1;\r\n    text-decoration: none;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n    color: white;\r\n`;\r\nexport const BackIconBox = styled.div`\r\n    width: 25px;\r\n    height: 25px;\r\n\r\n    color: white;\r\n`;\r\nexport const BackLabel = styled.p``;\r\n","import React from \"react\";\r\n\r\nimport { LeftArrowAlt as Back } from 'styled-icons/boxicons-regular/LeftArrowAlt';\r\n\r\nimport * as S from \"./styled\";\r\n\r\nexport default function HeaderMenu({ userData, renderBackButton }) {\r\n    return (\r\n        <S.ProfileWrapper>\r\n            <S.ProfileContainer>\r\n                <S.ProfileLink to=\"/profile\">\r\n                    <S.ProfileImgContainer>\r\n                        <S.ProfileImg\r\n                            alt={`${userData.name} profile image`}\r\n                            title={`${userData.name} - ${userData.email}`}\r\n                            src={userData.photoURL}\r\n                        />\r\n                    </S.ProfileImgContainer>\r\n                    <S.DisplayName>{userData.name}</S.DisplayName>\r\n                </S.ProfileLink>\r\n                {renderBackButton && \r\n                <S.ButtonBackWrapper to=\"/dashboard\">\r\n                    <S.BackIconBox>\r\n                        <Back />\r\n                    </S.BackIconBox>\r\n                    <S.BackLabel>Back</S.BackLabel>\r\n                </S.ButtonBackWrapper>}\r\n            </S.ProfileContainer>\r\n        </S.ProfileWrapper>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst Viewport = styled.div`\r\n    width: 100%;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    min-height: 100vh;\r\n\r\n    background: #0b0a0d;\r\n`;\r\nconst Wrapper = styled.div`\r\n    width: 100%;\r\n\r\n    max-width: 960px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n\r\n    padding-bottom: 75px;\r\n`;\r\n\r\nexport default function ViewportComponent({ children }) {\r\n    return (\r\n        <Viewport>\r\n            <Wrapper>{children}</Wrapper>\r\n        </Viewport>\r\n    );\r\n}\r\n","import AllCompleteImg from \"../../assets/check.svg\";\r\nimport Loading from \"../../assets/loading.svg\";\r\nimport LoadingUserImg from \"../../assets/loadingUser.svg\";\r\n\r\nexport default {\r\n    AllCompleteImg,\r\n    Loading,\r\n    LoadingUserImg\r\n}","import styled from \"styled-components\";\r\n\r\nexport const NavWrapper = styled.div`\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 0;\r\n\r\n    z-index: 10000;\r\n\r\n    width: 100%;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    background: #0b0a0d;\r\n`;\r\nexport const NavContainer = styled.div`\r\n    width: 100%;\r\n    max-width: 560px;\r\n    min-width: 0;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 12px;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Types } from \"../../store/ducks/user\";\r\nimport { Types as TypesTodo } from \"../../store/ducks/todo\";\r\n\r\nimport firebase from \"../../firebase\";\r\nimport { db } from \"../../firebase\";\r\nimport \"firebase/auth\";\r\n\r\nimport AllComplete from \"../allComplete/index\";\r\nimport LoadingData from \"../loadingData/index\";\r\nimport LoadingUser from \"../loadingUser/index\";\r\n\r\nimport UpdateTodo from \"../updateTodo/index\";\r\nimport TodoItem from \"../todoItem/index\";\r\n\r\nimport NavFormAdd from \"../navFormAdd/index\";\r\n\r\nimport HeaderMenu from \"../headerMenu/index\";\r\n\r\nimport Viewport from \"../viewport/index\";\r\n\r\nimport A from \"./assets\";\r\n\r\nimport * as S from \"./styled\";\r\n\r\nconst Todo = props => {\r\n    const [edit, setEdit] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const user = useSelector(state => state.user);\r\n    const userData = user.data;\r\n    const userIsLoading = user.loading;\r\n\r\n    const todo = useSelector(state => state.todo);\r\n    const todoData = todo.data;\r\n    const todoIsLoading = todo.loading;\r\n\r\n    function dispatchSnapshot(snapshot) {\r\n        if (!snapshot.size) {\r\n            dispatch({\r\n                type: TypesTodo.SUCCESS_TODO_LIST,\r\n                payload: {\r\n                    data: []\r\n                }\r\n            });\r\n        }\r\n        const todoList = snapshot.docs.map(item => {\r\n            return {\r\n                ...item.data(),\r\n                id: item.id,\r\n                marked: false\r\n            };\r\n        });\r\n\r\n        dispatch({\r\n            type: TypesTodo.SUCCESS_TODO_LIST,\r\n            payload: {\r\n                data: todoList\r\n            }\r\n        });\r\n    }\r\n    function addSnapshotListener(email) {\r\n        db.collection(\"todo\")\r\n            .where(\"userEmail\", \"==\", email)\r\n            .orderBy(\"date\", \"desc\")\r\n            .onSnapshot(snapshot => {\r\n                dispatchSnapshot(snapshot);\r\n            });\r\n    }\r\n    useEffect(() => {\r\n        function getUserData() {\r\n            if (userData && todoData) return;\r\n\r\n\r\n            dispatch({\r\n                type: TypesTodo.REQUEST_TODO_LIST\r\n            });\r\n            const currentUser = firebase.auth().currentUser;\r\n            if (currentUser) {\r\n                dispatch({\r\n                    type: Types.SUCCESS_USER,\r\n                    payload: {\r\n                        data: {\r\n                            uid: currentUser.uid,\r\n                            name: currentUser.displayName,\r\n                            email: currentUser.email,\r\n                            photoURL: currentUser.photoURL\r\n                        }\r\n                    }\r\n                });\r\n                addSnapshotListener(currentUser.email);\r\n\r\n                return;\r\n            }\r\n            dispatch({\r\n                type: Types.FAILED_USER,\r\n                payload: {\r\n                    error: \"User not logged\"\r\n                }\r\n            });\r\n        }\r\n        getUserData();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n    if (userIsLoading || !userData)\r\n        return <LoadingUser img={A.LoadingUserImg} />;\r\n    return (\r\n        <Viewport>\r\n            <HeaderMenu userData={userData} />\r\n\r\n            <UpdateTodo edit={edit} setEdit={setEdit} />\r\n\r\n            <S.NavWrapper>\r\n                <S.NavContainer>\r\n                    <NavFormAdd />\r\n                </S.NavContainer>\r\n            </S.NavWrapper>\r\n\r\n            {todoData && !todoIsLoading ? (\r\n                !todoData.length ? (\r\n                    <AllComplete img={A.AllCompleteImg} />\r\n                ) : (\r\n                    todoData.map(item => (\r\n                        <TodoItem setEdit={setEdit} key={item.id} item={item} />\r\n                    ))\r\n                )\r\n            ) : (\r\n                <LoadingData img={A.Loading} />\r\n            )}\r\n        </Viewport>\r\n    );\r\n};\r\nexport default Todo;\r\n","import React from \"react\"\r\n\r\nimport TodoComponent from \"../components/todo/index\"\r\n\r\nexport default ({ ...props }) => <TodoComponent {...props} />","import firebase from \"../firebase\";\r\nimport \"firebase/auth\";\r\n\r\nfunction signByProvider(provider, err) {\r\n    firebase\r\n        .auth()\r\n        .signInWithPopup(provider)\r\n        .then(function() {\r\n            const currentUser = firebase.auth().currentUser;\r\n            if (!currentUser.photoURL) {\r\n                currentUser\r\n                    .updateProfile({\r\n                        photoURL:\r\n                            \"https://api.adorable.io/avatars/150/abott@adorable.png\"\r\n                    })\r\n                    .catch(err);\r\n                return;\r\n            }\r\n        })\r\n        .catch(err);\r\n}\r\n\r\nexport function handleSignByGoogle(err) {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    signByProvider(provider, err);\r\n}\r\nexport function handleSignByGithub(err) {\r\n    const provider = new firebase.auth.GithubAuthProvider();\r\n    signByProvider(provider, err);\r\n}\r\nexport function handleSignByMicrosoft(err) {\r\n    const provider = new firebase.auth.OAuthProvider(\"microsoft.com\");\r\n    signByProvider(provider, err);\r\n}\r\n\r\nexport function handleRegisterByEmail({ email, password, name }, err) {\r\n    firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then(function() {\r\n            const currentUser = firebase.auth().currentUser;\r\n            currentUser\r\n                .updateProfile({\r\n                    displayName: name,\r\n                    photoURL:\r\n                        \"https://api.adorable.io/avatars/45/abott@adorable.png\"\r\n                })\r\n                .catch(err);\r\n        })\r\n        .catch(err);\r\n}\r\n\r\nexport function handleLoginByEmail({ email, password }, err) {\r\n    firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(email, password)\r\n        .then(function(){\r\n            const currentUser = firebase.auth().currentUser;\r\n            if (!currentUser.photoURL) {\r\n                currentUser\r\n                    .updateProfile({\r\n                        photoURL:\r\n                            \"https://api.adorable.io/avatars/45/abott@adorable.png\"\r\n                    })\r\n                    .catch(err);\r\n                return;\r\n            }\r\n        })\r\n        .catch(err);\r\n}\r\n\r\nexport function logOut() {\r\n    firebase.auth().signOut();\r\n}\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Input } from \"@rocketseat/unform\";\r\n\r\nexport const AuthWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n\r\n  min-height: 720px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #0B0A0D;\r\n`;\r\nexport const LabelAction = styled.h1`\r\n  font-size: 2.5em;\r\n  color: #79B538;\r\n  margin: 2rem 0;\r\n`;\r\nexport const AppLogo = styled.img`\r\n  margin-bottom: 1rem;\r\n`;\r\nexport const ProvidersContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\nexport const ButtonProvider = styled.button`\r\n  padding: 12px;\r\n\r\n  background: #19181f;\r\n\r\n  border-radius: 4px;\r\n\r\n  flex: 1;\r\n  min-width: 100px;\r\n\r\n  margin: 8px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  border: 3px solid #25242c;\r\n\r\n  transition: var(--transition);\r\n  img {\r\n    transition: var(--transition);\r\n    filter: brightness(0.4) contrast(200%) grayscale(50%) invert(75%)\r\n      opacity(25%) saturate(30%) sepia(60%);\r\n  }\r\n  &:hover {\r\n    background: #25242c;\r\n\r\n    border: 3px solid #79b538;\r\n\r\n    img {\r\n      filter: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FormUnform = styled(Form)`\r\n  width: 100%;\r\n\r\n  max-width: 720px;\r\n\r\n  padding: 24px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const EmailInputContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n`;\r\nexport const Label = styled.label`\r\n  display: none;\r\n`;\r\nexport const InputUnform = styled(Input)`\r\n  border-radius: 4px;\r\n\r\n  margin: 8px;\r\n\r\n  flex: 1;\r\n  background: #19181f;\r\n\r\n  border: 3px solid #25242c;\r\n\r\n  padding: 1rem 1.5rem;\r\n\r\n  color: white;\r\n\r\n  transition: var(--transition);\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: 3px solid #79b538;\r\n    background: #29292a;\r\n  }\r\n`;\r\n\r\nexport const SubmitContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ButtonForm = styled.button`\r\n  border-radius: 4px;\r\n\r\n  margin: 8px;\r\n  width: 100%;\r\n\r\n  height: 54px;\r\n\r\n  background: #79b538;\r\n\r\n  font-weight: bolder;\r\n  padding: 12px 1.5rem;\r\n\r\n  max-width: 200px;\r\n\r\n  transition: var(--transition);\r\n\r\n  &:hover {\r\n    background: #67a326;\r\n  }\r\n\r\n  &[disabled] {\r\n    background: gray;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nexport const LinkForm = styled(Link)`\r\n  margin: 8px;\r\n\r\n  font-weight: bolder;\r\n  padding: 1rem 0.3rem;\r\n  text-align: center;\r\n\r\n  transition: var(--transition);\r\n\r\n  border-bottom: 2px solid #79b538;\r\n  color: #79b538;\r\n\r\n  &[disabled] {\r\n    background: gray;\r\n    cursor: not-allowed;\r\n  }\r\n\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    color: #67a326;\r\n    border-bottom: 2px solid #67a326;\r\n  }\r\n`;","import React from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Types } from \"../../store/ducks/user\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport {\r\n    handleSignByGoogle,\r\n    handleSignByGithub,\r\n    handleSignByMicrosoft,\r\n    handleLoginByEmail\r\n} from \"../../utils/auth\";\r\n\r\nimport Logo from \"../../assets/logo.svg\";\r\nimport Google from \"../../assets/google.svg\";\r\nimport Github from \"../../assets/github.svg\";\r\nimport Microsoft from \"../../assets/microsoft.svg\";\r\nimport Loading from \"../../assets/loading.svg\";\r\n\r\nimport * as S from \"./styled\";\r\n\r\nconst Login = ({ history }) => {\r\n    const isLoading = useSelector(state => state.user.loading);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function showErrors(error) {\r\n        toast.error(error.message);\r\n        dispatch({\r\n            type: Types.FAILED_USER,\r\n            payload: {\r\n                error: error.message\r\n            }\r\n        });\r\n    }\r\n    return (\r\n        <S.AuthWrapper>\r\n            <S.FormUnform\r\n                onSubmit={({ ...all }) => {\r\n                    dispatch({\r\n                        type: Types.REQUEST_USER\r\n                    });\r\n                    handleLoginByEmail({ ...all }, showErrors);\r\n                }}\r\n            >\r\n                <S.AppLogo src={Logo} alt=\"To Do List\" width=\"120\" />\r\n\r\n                <S.LabelAction>Login</S.LabelAction>\r\n\r\n                <S.ProvidersContainer>\r\n                    <S.ButtonProvider\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            dispatch({\r\n                                type: Types.REQUEST_USER\r\n                            });\r\n                            handleSignByGoogle(showErrors);\r\n                        }}\r\n                    >\r\n                        <img height=\"30\" src={Google} alt=\"Google Logo\" />\r\n                    </S.ButtonProvider>\r\n                    <S.ButtonProvider\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            dispatch({\r\n                                type: Types.REQUEST_USER\r\n                            });\r\n                            handleSignByGithub(showErrors);\r\n                        }}\r\n                    >\r\n                        <img height=\"30\" src={Github} alt=\"Github Logo\" />\r\n                    </S.ButtonProvider>\r\n                    <S.ButtonProvider\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            dispatch({\r\n                                type: Types.REQUEST_USER\r\n                            });\r\n                            handleSignByMicrosoft(showErrors);\r\n                        }}\r\n                    >\r\n                        <img height=\"30\" src={Microsoft} alt=\"Microsoft Logo\" />\r\n                    </S.ButtonProvider>\r\n                </S.ProvidersContainer>\r\n\r\n                <S.EmailInputContainer>\r\n                    <S.Label htmlFor=\"email\">E-mail</S.Label>\r\n                    <S.InputUnform\r\n                        id=\"email\"\r\n                        placeholder=\"E-mail\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                    />\r\n\r\n                    <S.Label htmlFor=\"password\">Password</S.Label>\r\n                    <S.InputUnform\r\n                        id=\"password\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                    />\r\n\r\n                    <S.SubmitContainer>\r\n                        <S.ButtonForm disabled={isLoading} type=\"submit\">\r\n                            {isLoading ? (\r\n                                <img\r\n                                    height=\"30\"\r\n                                    src={Loading}\r\n                                    alt=\"Loading Icon\"\r\n                                />\r\n                            ) : (\r\n                                \"Login\"\r\n                            )}\r\n                        </S.ButtonForm>\r\n                        <S.LinkForm to=\"/register\">Register</S.LinkForm>\r\n                    </S.SubmitContainer>\r\n                </S.EmailInputContainer>\r\n            </S.FormUnform>\r\n        </S.AuthWrapper>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nimport LoginComponent from \"../components/login/index\";\r\n\r\nconst Login = ({ ...props }) => <LoginComponent {...props} />;\r\n\r\nexport default Login;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Input } from \"@rocketseat/unform\";\r\n\r\nexport const AuthWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n\r\n  min-height: 720px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #0B0A0D;\r\n`;\r\nexport const LabelAction = styled.h1`\r\n  font-size: 2.5em;\r\n  color: #79B538;\r\n  margin: 2rem 0;\r\n`;\r\nexport const AppLogo = styled.img`\r\n  margin-bottom: 1rem;\r\n`;\r\nexport const ProvidersContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\nexport const ButtonProvider = styled.button`\r\n  padding: 12px;\r\n\r\n  background: #19181f;\r\n\r\n  border-radius: 4px;\r\n\r\n  flex: 1;\r\n  min-width: 100px;\r\n\r\n  margin: 8px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  border: 3px solid #25242c;\r\n\r\n  transition: var(--transition);\r\n  img {\r\n    transition: var(--transition);\r\n    filter: brightness(0.4) contrast(200%) grayscale(50%) invert(75%)\r\n      opacity(25%) saturate(30%) sepia(60%);\r\n  }\r\n  &:hover {\r\n    background: #25242c;\r\n\r\n    border: 3px solid #79b538;\r\n\r\n    img {\r\n      filter: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FormUnform = styled(Form)`\r\n  width: 100%;\r\n\r\n  max-width: 720px;\r\n\r\n  padding: 24px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const EmailInputContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n`;\r\nexport const Label = styled.label`\r\n  display: none;\r\n`;\r\nexport const InputUnform = styled(Input)`\r\n  border-radius: 4px;\r\n\r\n  margin: 8px;\r\n\r\n  flex: 1;\r\n  background: #19181f;\r\n\r\n  border: 3px solid #25242c;\r\n\r\n  padding: 1rem 1.5rem;\r\n\r\n  color: white;\r\n\r\n  transition: var(--transition);\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: 3px solid #79b538;\r\n    background: #29292a;\r\n  }\r\n`;\r\n\r\nexport const SubmitContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ButtonForm = styled.button`\r\n  border-radius: 4px;\r\n\r\n  margin: 8px;\r\n  width: 100%;\r\n\r\n  height: 54px;\r\n\r\n  background: #79b538;\r\n\r\n  font-weight: bolder;\r\n  padding: 12px 1.5rem;\r\n\r\n  max-width: 200px;\r\n\r\n  transition: var(--transition);\r\n\r\n  &:hover {\r\n    background: #67a326;\r\n  }\r\n\r\n  &[disabled] {\r\n    background: gray;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nexport const LinkForm = styled(Link)`\r\n  margin: 8px;\r\n\r\n  font-weight: bolder;\r\n  padding: 1rem 0.3rem;\r\n  text-align: center;\r\n\r\n  transition: var(--transition);\r\n\r\n  border-bottom: 2px solid #79b538;\r\n  color: #79b538;\r\n\r\n  &[disabled] {\r\n    background: gray;\r\n    cursor: not-allowed;\r\n  }\r\n\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    color: #67a326;\r\n    border-bottom: 2px solid #67a326;\r\n  }\r\n`;","import React from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Types } from \"../../store/ducks/user\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport {\r\n    handleSignByGoogle,\r\n    handleSignByGithub,\r\n    handleSignByMicrosoft,\r\n    handleRegisterByEmail\r\n} from \"../../utils/auth\";\r\n\r\nimport Logo from \"../../assets/logo.svg\";\r\nimport Google from \"../../assets/google.svg\";\r\nimport Github from \"../../assets/github.svg\";\r\nimport Microsoft from \"../../assets/microsoft.svg\";\r\nimport Loading from \"../../assets/loading.svg\";\r\n\r\nimport * as S from \"./styled\";\r\n\r\nconst Register = ({ history }) => {\r\n    const isLoading = useSelector(state => state.user.loading);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function showErrors(error) {\r\n        toast.error(error.message);\r\n        dispatch({\r\n            type: Types.FAILED_USER,\r\n            payload: {\r\n                error: error.message\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <S.AuthWrapper>\r\n            <S.FormUnform\r\n                onSubmit={({ ...all }) => {\r\n                    dispatch({\r\n                        type: Types.REQUEST_USER\r\n                    });\r\n                    handleRegisterByEmail(\r\n                        { ...all },\r\n                        showErrors\r\n                    );\r\n                }}\r\n            >\r\n                <S.AppLogo src={Logo} alt=\"To Do List\" width=\"120\" />\r\n\r\n                <S.LabelAction>Register</S.LabelAction>\r\n\r\n                <S.ProvidersContainer>\r\n                    <S.ButtonProvider\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            dispatch({\r\n                                type: Types.REQUEST_USER\r\n                            });\r\n                            handleSignByGoogle(showErrors);\r\n                        }}\r\n                    >\r\n                        <img height=\"30\" src={Google} alt=\"Google Logo\" />\r\n                    </S.ButtonProvider>\r\n                    <S.ButtonProvider\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            dispatch({\r\n                                type: Types.REQUEST_USER\r\n                            });\r\n                            handleSignByGithub(showErrors);\r\n                        }}\r\n                    >\r\n                        <img height=\"30\" src={Github} alt=\"Github Logo\" />\r\n                    </S.ButtonProvider>\r\n                    <S.ButtonProvider\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            dispatch({\r\n                                type: Types.REQUEST_USER\r\n                            });\r\n                            handleSignByMicrosoft(showErrors);\r\n                        }}\r\n                    >\r\n                        <img height=\"30\" src={Microsoft} alt=\"Microsoft Logo\" />\r\n                    </S.ButtonProvider>\r\n                </S.ProvidersContainer>\r\n\r\n                <S.EmailInputContainer>\r\n                    <S.Label htmlFor=\"name\">Name</S.Label>\r\n                    <S.InputUnform\r\n                        id=\"name\"\r\n                        placeholder=\"Name\"\r\n                        name=\"name\"\r\n                        type=\"text\"\r\n                    />\r\n\r\n                    <S.Label htmlFor=\"email\">E-mail</S.Label>\r\n                    <S.InputUnform\r\n                        id=\"email\"\r\n                        placeholder=\"E-mail\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                    />\r\n\r\n                    <S.Label htmlFor=\"password\">Password</S.Label>\r\n                    <S.InputUnform\r\n                        id=\"password\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                    />\r\n\r\n                    <S.SubmitContainer>\r\n                        <S.ButtonForm disabled={isLoading} type=\"submit\">\r\n                            {isLoading ? (\r\n                                <img\r\n                                    height=\"30\"\r\n                                    src={Loading}\r\n                                    alt=\"Loading Icon\"\r\n                                />\r\n                            ) : (\r\n                                \"Register\"\r\n                            )}\r\n                        </S.ButtonForm>\r\n                        <S.LinkForm to=\"/login\">Login</S.LinkForm>\r\n                    </S.SubmitContainer>\r\n                </S.EmailInputContainer>\r\n            </S.FormUnform>\r\n        </S.AuthWrapper>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","import React from 'react';\r\n\r\nimport RegisterComponent from \"../components/register/index\"\r\n\r\nconst Register = ({...props}) => <RegisterComponent {...props} />\r\n\r\nexport default Register;","import firebase from \"../firebase\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction createUniqueId() {\r\n    var dt = new Date().getTime();\r\n    var uuid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(\r\n        c\r\n    ) {\r\n        var r = (dt + Math.random() * 16) % 16 | 0;\r\n        dt = Math.floor(dt / 16);\r\n        return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\r\n    });\r\n    return uuid;\r\n}\r\nexport function uploadPhoto(file, result, err) {\r\n    const currentFile = file;\r\n    const allowedTypes = [\r\n        \"image/jpg\",\r\n        \"image/png\",\r\n        \"image/jpeg\",\r\n        \"image/webp\",\r\n        \"image/gif\",\r\n        \"image/svg+xml\",\r\n        \"image/tiff\"\r\n    ];\r\n    if (!allowedTypes.includes(currentFile.type)) {\r\n        toast.error(\"Invalid file type, sorry :(\");\r\n        return;\r\n    }\r\n\r\n    if (currentFile.size / 1000000 > 15) {\r\n        toast.info(\"Limit size is 15mb, sorry\");\r\n        return;\r\n    }\r\n    if (currentFile.size / 1000000 > 1)\r\n        toast.info(\"Your image is larger than 1mb, it may take a while...\");\r\n    const ref = firebase.storage().ref();\r\n    const name = createUniqueId() + \"-\" + currentFile.name;\r\n    const metadata = {\r\n        contentType: currentFile.type\r\n    };\r\n    const task = ref.child(name).put(currentFile, metadata);\r\n    task.then(snapshot => snapshot.ref.getDownloadURL())\r\n        .then(url => {\r\n            firebase.auth().currentUser.updateProfile({\r\n                photoURL: url\r\n            });\r\n            result(url);\r\n        })\r\n        .catch(error => err(error));\r\n}\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Input } from \"@rocketseat/unform\";\r\n\r\nexport const FileForm = styled.div`\r\n    width: 100%;\r\n\r\n    padding: 16px 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\nexport const FileContainer = styled.div`\r\n    position: relative;\r\n    width: 130px;\r\n    height: 130px;\r\n    max-width: 180px;\r\n\r\n    border-radius: 100%;\r\n\r\n    border: 3px solid #79b538;\r\n\r\n    transition: var(--transition);\r\n    cursor: pointer;\r\n    &:hover {\r\n        border: 3px solid rgb(101, 161, 36);\r\n    }\r\n`;\r\nexport const File = styled.img`\r\n    top: 0;\r\n    right: 0;\r\n\r\n    border-radius: 100%;\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    object-fit: cover;\r\n    object-position: center;\r\n\r\n    position: absolute;\r\n\r\n    z-index: 50;\r\n`;\r\nexport const FileIconBox = styled.div`\r\n    border-radius: 100%;\r\n    top: 0;\r\n    right: 0;\r\n\r\n    transition: var(--transition);\r\n\r\n    position: absolute;\r\n\r\n    z-index: 100;\r\n\r\n    width: 36px;\r\n    height: 36px;\r\n    background: #79b538;\r\n\r\n    padding: 9px;\r\n\r\n    color: white;\r\n\r\n    transition: var(--transition);\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const FileLoadingContainer = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 100%;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    \r\n    background: rgba(0, 0, 0, 0.5);\r\n\r\n    z-index: 85;\r\n`;\r\nexport const FileLoadingImg = styled.img`\r\n    top: 0;\r\n    right: 0;\r\n\r\n    border-radius: 100%;\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    object-fit: cover;\r\n    object-position: center;\r\n\r\n    position: absolute;\r\n`;\r\n\r\nexport const FileInputUnform = styled.input`\r\n    display: none;\r\n`;\r\n\r\n\r\n\r\n\r\n\r\nexport const FormUnform = styled(Form)`\r\n  width: 100%;\r\n\r\n  max-width: 550px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const EmailInputContainer = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n`;\r\nexport const Label = styled.label`\r\n  display: none;\r\n`;\r\nexport const InputUnform = styled(Input)`\r\n  border-radius: 4px;\r\n\r\n  margin: 8px;\r\n\r\n  flex: 1;\r\n  background: #19181f;\r\n\r\n  border: 3px solid #25242c;\r\n\r\n  padding: 1rem 1.5rem;\r\n\r\n  color: white;\r\n\r\n  transition: var(--transition);\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: 3px solid #79b538;\r\n    background: #29292a;\r\n  }\r\n  &[readonly]{\r\n      cursor: not-allowed;\r\n      background: #0B0A0D;\r\n      color: #44434B;\r\n      border: 3px solid #25242C;\r\n  }\r\n`;\r\n\r\nexport const SubmitContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ButtonForm = styled.button`\r\n  border-radius: 4px;\r\n\r\n  margin: 8px;\r\n  width: 100%;\r\n\r\n  height: 54px;\r\n\r\n  background: ${props => props.background || \"#79b538\"};\r\n\r\n  font-weight: bolder;\r\n  padding: 12px 1.5rem;\r\n\r\n  max-width: 200px;\r\n\r\n  transition: var(--transition);\r\n\r\n  color: ${props => props.color || \"#0B0A0D\"};\r\n\r\n  &:hover {\r\n      filter: grayscale(20%);\r\n  }\r\n\r\n  &[disabled] {\r\n    background: gray;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\nexport const IndexLink = styled(Link)`\r\n  color: lightgrey;\r\n  padding: 2rem;\r\n`","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Types } from \"../../store/ducks/user\";\r\n\r\nimport firebase from \"../../firebase\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport LoadingUserImg from \"../../assets/loadingUser.svg\";\r\n\r\nimport HeaderMenu from \"../headerMenu/index\";\r\nimport Viewport from \"../viewport/index\";\r\n\r\nimport LoadingUser from \"../loadingUser\";\r\n\r\n//\r\nimport LoadingPhoto from \"../../assets/loadingUser.svg\";\r\nimport Loading from \"../../assets/loading.svg\";\r\nimport { AddAPhoto as Edit } from \"styled-icons/material/AddAPhoto\";\r\n\r\nimport { uploadPhoto } from \"../../utils/upload\";\r\nimport { updateProfile } from \"../../utils/update\";\r\nimport { logOut } from \"../../utils/auth\";\r\n\r\nimport * as S from \"./styled\";\r\n\r\n//\r\n\r\nconst Profile = props => {\r\n    const inputFile = useRef(null);\r\n    const [updatingProfile, setUpdatingProfile] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const user = useSelector(state => state.user);\r\n    const userData = user.data;\r\n    const userIsLoading = user.loading;\r\n\r\n    useEffect(() => {\r\n        function getUserData() {\r\n            if (userData) return;\r\n\r\n            const currentUser = firebase.auth().currentUser;\r\n            if (currentUser) {\r\n                dispatch({\r\n                    type: Types.SUCCESS_USER,\r\n                    payload: {\r\n                        data: {\r\n                            uid: currentUser.uid,\r\n                            name: currentUser.displayName,\r\n                            email: currentUser.email,\r\n                            photoURL: currentUser.photoURL\r\n                        }\r\n                    }\r\n                });\r\n                return;\r\n            }\r\n            dispatch({\r\n                type: Types.FAILED_USER,\r\n                payload: {\r\n                    error: \"User not logged\"\r\n                }\r\n            });\r\n        }\r\n        getUserData();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    function handleChooseFile() {\r\n        setUpdatingProfile(true);\r\n        uploadPhoto(\r\n            inputFile.current.files[0],\r\n            url => {\r\n                dispatch({\r\n                    type: Types.SUCCESS_USER,\r\n                    payload: {\r\n                        data: {\r\n                            ...userData,\r\n                            photoURL: url\r\n                        }\r\n                    }\r\n                });\r\n                setUpdatingProfile(null);\r\n            },\r\n            error => toast.error(error.message)\r\n        );\r\n    }\r\n\r\n    function handleUpdateProfile({ name, email }) {\r\n        setUpdatingProfile(true);\r\n        updateProfile(\r\n            { name, email },\r\n            { name: userData.name, email: userData.name },\r\n            result => {\r\n                if (result.message) {\r\n                    toast.success(result.message);\r\n                    setUpdatingProfile(false);\r\n                    return;\r\n                }\r\n                dispatch({\r\n                    type: Types.SUCCESS_USER,\r\n                    payload: {\r\n                        data: {\r\n                            ...userData,\r\n                            name,\r\n                            email\r\n                        }\r\n                    }\r\n                });\r\n                toast.success(\"Profile updated successful :)\");\r\n                setUpdatingProfile(false);\r\n            },\r\n            err => {\r\n                toast.error(err.message);\r\n                setUpdatingProfile(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    if (userIsLoading || !userData) return <LoadingUser img={LoadingUserImg} />;\r\n    return (\r\n        <Viewport>\r\n            <HeaderMenu renderBackButton userData={userData} />\r\n            <S.FileForm>\r\n                <S.FileContainer\r\n                    onClick={() => inputFile.current.click()}\r\n                    type=\"button\"\r\n                >\r\n                    <S.File\r\n                        src={userData.photoURL}\r\n                        alt={`${userData.name} - profile image`}\r\n                    />\r\n                    <S.FileIconBox>\r\n                        <Edit />\r\n                    </S.FileIconBox>\r\n\r\n                    {updatingProfile && (\r\n                        <S.FileLoadingContainer>\r\n                            <S.FileLoadingImg\r\n                                src={LoadingPhoto}\r\n                                alt=\"Loading Profile Img\"\r\n                            />\r\n                        </S.FileLoadingContainer>\r\n                    )}\r\n                </S.FileContainer>\r\n                <S.FileInputUnform\r\n                    name=\"attach\"\r\n                    id=\"attach\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    ref={inputFile}\r\n                    onChange={handleChooseFile}\r\n                />\r\n            </S.FileForm>\r\n            <S.FormUnform\r\n                initialData={{\r\n                    name: userData.name,\r\n                    email: userData.email\r\n                }}\r\n                onSubmit={handleUpdateProfile}\r\n            >\r\n                <S.EmailInputContainer>\r\n                    <S.Label htmlFor=\"name\">Name</S.Label>\r\n                    <S.InputUnform\r\n                        id=\"name\"\r\n                        placeholder=\"Name\"\r\n                        name=\"name\"\r\n                        type=\"text\"\r\n                    />\r\n                    <S.Label htmlFor=\"email\">E-mail</S.Label>\r\n                    <S.InputUnform\r\n                        id=\"email\"\r\n                        placeholder=\"E-mail\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        readOnly\r\n                    />\r\n                    <S.SubmitContainer>\r\n                        <S.ButtonForm disabled={updatingProfile} type=\"submit\">\r\n                            {updatingProfile ? (\r\n                                <img\r\n                                    height=\"30\"\r\n                                    src={Loading}\r\n                                    alt=\"Loading Icon\"\r\n                                />\r\n                            ) : (\r\n                                \"Save\"\r\n                            )}\r\n                        </S.ButtonForm>\r\n                    </S.SubmitContainer>\r\n                    <S.SubmitContainer>\r\n                        <S.ButtonForm\r\n                            disabled={updatingProfile}\r\n                            type=\"button\"\r\n                            onClick={logOut}\r\n                            background=\"#19181F\"\r\n                            color=\"#D34242\"\r\n                        >\r\n                            {updatingProfile ? (\r\n                                <img\r\n                                    height=\"30\"\r\n                                    src={Loading}\r\n                                    alt=\"Loading Icon\"\r\n                                />\r\n                            ) : (\r\n                                \"Logout\"\r\n                            )}\r\n                        </S.ButtonForm>\r\n                    </S.SubmitContainer>\r\n                    <S.IndexLink to=\"/\">About project...</S.IndexLink>\r\n                </S.EmailInputContainer>\r\n            </S.FormUnform>\r\n        </Viewport>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import firebase from \"../firebase\";\r\n\r\nexport function updateProfile({ name, email }, currentUser, result, err) {\r\n    if (!name.length || !email.length) {\r\n        err({ message: \"Invalid input :(\"});\r\n        return;\r\n    }\r\n    if (name === currentUser.name && email === currentUser.email) {\r\n        result({ message: \"Profile updated successful :)\"});\r\n        return;\r\n    }\r\n    firebase\r\n        .auth()\r\n        .currentUser.updateProfile({\r\n            displayName: name,\r\n            email\r\n        })\r\n        .then(function() {\r\n            const { displayName: name, email } = firebase.auth().currentUser;\r\n            result(name, email);\r\n        })\r\n        .catch(error => {\r\n            err(error);\r\n        });\r\n}\r\n","import React from 'react';\r\n\r\nimport ProfileComponent from \"../components/profile/index\";\r\n\r\nconst Profile = ({ ...props }) => <ProfileComponent {...props} />\r\n\r\nexport default Profile;","import React from \"react\";\r\n\r\nimport FullScreenGlitch from \"../fullScreenGlitch/index\";\r\n\r\nexport default () => <FullScreenGlitch glitchText=\"404\" text=\"We searched everywhere but we found nothing... let's go, come back, click here\" linkTo=\"dashboard\" />","import React from \"react\";\r\n\r\nimport PageNotFound from \"../components/notFound/index\";\r\n\r\nexport default ({ ...props }) => <PageNotFound {...props} />\r\n","import styled from \"styled-components\"\r\n\r\nexport const ToastWrapper = styled.div`\r\n    position: fixed;\r\n    bottom: 87px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    background: #505052;\r\n    color: #FBFBFC;\r\n    padding: 9px 14px;\r\n    border-radius: 36px;\r\n    font-size: 12px;\r\n    font-weight: normal;\r\n\r\n    transition: all .3s ease-in-out;\r\n\r\n    will-change: opacity, visibility;\r\n    \r\n    &.hide{\r\n        opacity: 0;\r\n        visibility: hidden;\r\n    }\r\n    &.visible{\r\n        opacity: 1;\r\n        visibility: visible;\r\n    }\r\n`\r\n","import React, { useEffect } from \"react\"\r\n\r\nimport { Types as TypesToast } from \"../../store/ducks/toast\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport * as S from \"./styled\";\r\n\r\nfunction MobileToast() {\r\n    const dispatch = useDispatch();\r\n    const toast = useSelector(state => state.toast)\r\n    const { isVisible, message } = toast;\r\n\r\n    function endMessage() {\r\n        dispatch({\r\n            type: TypesToast.END_MESSAGE\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isVisible){\r\n            setTimeout(endMessage, 2000);\r\n        }\r\n    }, [isVisible])\r\n    \r\n    return (\r\n        <S.ToastWrapper className={isVisible ? \"visible\" : \"hide\"}>\r\n            {message || \"\"}\r\n        </S.ToastWrapper>\r\n    )\r\n}\r\n\r\nexport default MobileToast;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport \"./ReactToastify.css\";\r\n\r\nexport default createGlobalStyle`\r\n    @import url('https://fonts.googleapis.com/css?family=Oxanium&display=swap');\r\n    *{\r\n        margin: 0;\r\n        padding: 0;\r\n        border: none;\r\n        box-sizing: border-box;\r\n        outline: none;\r\n\r\n        font-family: 'Oxanium', sans-serif;\r\n        font-size: 1em;\r\n\r\n        text-rendering: optimizeLegibility !important;\r\n        -webkit-font-smoothing: antialiased !important;\r\n\r\n        --transition: all .2s ease-in;\r\n\r\n        list-style: none;\r\n\r\n        -webkit-touch-callout: none;\r\n        -webkit-user-select: none;\r\n        -khtml-user-select: none; \r\n        -moz-user-select: none;\r\n        -ms-user-select: none; \r\n        user-select: none;\r\n        -webkit-tap-highlight-color: transparent;\r\n    }\r\n    ::-webkit-scrollbar { display: none; }\r\n    \r\n    [disabled]{\r\n        color: inherit;\r\n    }\r\n    html, body{\r\n        width: 100%;\r\n        height: 100%;\r\n        background: #0A0A0A;\r\n    }\r\n    input, button{\r\n        background: transparent;\r\n        font: inherit;\r\n    }\r\n    button{\r\n        cursor: pointer;\r\n    }\r\n    .customized-toast{\r\n        background: violet;\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    const isAuth = useSelector(state => state.user.isAuth);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                isAuth ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/login\",\r\n                            state: { from: props.location }\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => {\r\n    const isAuth = useSelector(state => state.user.isAuth);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                !isAuth ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/dashboard\",\r\n                            state: { from: props.location }\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Types } from \"./store/ducks/user\";\r\nimport { Types as TypesTodo } from \"./store/ducks/todo\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport Index from \"./pages/index\";\r\nimport Dashboard from \"./pages/dashboard\";\r\nimport Login from \"./pages/login\";\r\nimport Register from \"./pages/register\";\r\nimport Profile from \"./pages/profile\";\r\nimport NotFound from \"./pages/notFound\";\r\nimport MobileToast from \"./components/mobileToast\";\r\n\r\nimport GlobalStyled from \"./reset/index\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nimport LoadingUser from \"./components/loadingUser/index\";\r\nimport Loading from \"./assets/loadingUser.svg\";\r\n\r\nimport PrivateRoute from \"./privateRoute\";\r\nimport PublicRoute from \"./publicRoute\";\r\n\r\nimport firebase from \"./firebase\";\r\n\r\nconst Routes = () => {\r\n    const user = useSelector(state => state.user);\r\n    const isAuth = user.isAuth;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        function getUserState() {\r\n            firebase.auth().onAuthStateChanged(function(user) {\r\n                if (user) {\r\n                    if (!localStorage.getItem(\"toast\")) {\r\n                        toast.success(`Hi, ${user.displayName}!`);\r\n                        localStorage.setItem(\"toast\", \"true\");\r\n                    }\r\n\r\n                    dispatch({\r\n                        type: Types.SUCCESS_USER,\r\n                        payload: {\r\n                            data: {\r\n                                uid: user.uid,\r\n                                name: user.displayName,\r\n                                email: user.email,\r\n                                photoURL: user.photoURL\r\n                            }\r\n                        }\r\n                    });\r\n                    return;\r\n                }\r\n                localStorage.removeItem(\"toast\");\r\n                dispatch({\r\n                    type: TypesTodo.LOGOUT\r\n                });\r\n                dispatch({\r\n                    type: Types.LOGOUT_USER\r\n                });\r\n            });\r\n        }\r\n        getUserState();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    if (isAuth === null)\r\n        return (\r\n            <>\r\n                <GlobalStyled />\r\n                <LoadingUser img={Loading} />\r\n            </>\r\n        );\r\n\r\n    return (\r\n        <BrowserRouter basename=\"/todo/\">\r\n            <>\r\n                <GlobalStyled />\r\n                <ToastContainer />\r\n                <MobileToast />\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Index} />\r\n                    <PrivateRoute\r\n                        path=\"/dashboard\"\r\n                        exact\r\n                        component={Dashboard}\r\n                    />\r\n                    <PublicRoute path=\"/login\" exact component={Login} />\r\n                    <PublicRoute path=\"/register\" exact component={Register} />\r\n                    <PrivateRoute path=\"/profile\" exact component={Profile} />\r\n\r\n                    <Route path=\"/*\" component={NotFound} />\r\n                </Switch>\r\n            </>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport store from \"./store/index\";\r\n\r\nimport Routes from \"./routes\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <Routes />\r\n        </Provider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./App\"\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/loading.d8f8be86.svg\";","module.exports = __webpack_public_path__ + \"static/media/loadingUser.4223d91c.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.177fbe28.svg\";","module.exports = __webpack_public_path__ + \"static/media/google.09aea0f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.e4f2d6b0.svg\";","module.exports = __webpack_public_path__ + \"static/media/microsoft.5bd0e45f.svg\";","module.exports = __webpack_public_path__ + \"static/media/check.275682d9.svg\";"],"sourceRoot":""}